import commands from "../bot/events/interactions/mod.ts";
import { DEV_GUILD_ID } from "@config";
import { Bot, types } from "../../deps.ts";
import { Locale, translate } from "../bot/languages/translate.ts";
import { IRESTSlashCommandOption } from "./command.ts";

export async function registerLocaleCommands(bot: Bot) {
  await bot.rest.runMethod<types.RESTPostAPIApplicationCommandsJSONBody[]>(
    bot.rest,
    "put",
    bot.constants.endpoints.COMMANDS(bot.applicationId),
    Object.entries(commands).filter(([_name, command]) => !command.dev).map(
      ([name, command]) => {
        if (command.raw) return command.raw;

        const transformedOptions: IRESTSlashCommandOption[] | null = [];
        if (command.options) {
          for (const option of command.options) {
            transformedOptions.push({
              ...option,
              name: translate("en-GB", option.name),
              description: translate("en-GB", option.description),
              name_localizations: {
                "bg": translate("bg", option.name),
                "cs": translate("cs", option.name),
                "da": translate("da", option.name),
                "de": translate("de", option.name),
                "el": translate("el", option.name),
                "en-GB": translate("en-GB", option.name),
                "en-US": translate("en-US", option.name),
                "es-ES": translate("es-ES", option.name),
                "fi": translate("fi", option.name),
                "fr": translate("fr", option.name),
                "hi": translate("hi", option.name),
                "hr": translate("hr", option.name),
                "hu": translate("hu", option.name),
                "it": translate("it", option.name),
                "ja": translate("ja", option.name),
                "ko": translate("ko", option.name),
                "lt": translate("lt", option.name),
                "nl": translate("nl", option.name),
                "no": translate("no", option.name),
                "pl": translate("pl", option.name),
                "pt-BR": translate("pt-BR", option.name),
                "ro": translate("ro", option.name),
                "ru": translate("ru", option.name),
                "sv-SE": translate("sv-SE", option.name),
                "th": translate("th", option.name),
                "tr": translate("tr", option.name),
                "uk": translate("uk", option.name),
                "vi": translate("vi", option.name),
                "zh-CN": translate("zh-CN", option.name),
                "zh-TW": translate("zh-TW", option.name),
              },
              description_localizations: {
                "bg": translate("bg", option.description),
                "cs": translate("cs", option.description),
                "da": translate("da", option.description),
                "de": translate("de", option.description),
                "el": translate("el", option.description),
                "en-GB": translate("en-GB", option.description),
                "en-US": translate("en-US", option.description),
                "es-ES": translate("es-ES", option.description),
                "fi": translate("fi", option.description),
                "fr": translate("fr", option.description),
                "hi": translate("hi", option.description),
                "hr": translate("hr", option.description),
                "hu": translate("hu", option.description),
                "it": translate("it", option.description),
                "ja": translate("ja", option.description),
                "ko": translate("ko", option.description),
                "lt": translate("lt", option.description),
                "nl": translate("nl", option.description),
                "no": translate("no", option.description),
                "pl": translate("pl", option.description),
                "pt-BR": translate("pt-BR", option.description),
                "ro": translate("ro", option.description),
                "ru": translate("ru", option.description),
                "sv-SE": translate("sv-SE", option.description),
                "th": translate("th", option.description),
                "tr": translate("tr", option.description),
                "uk": translate("uk", option.description),
                "vi": translate("vi", option.description),
                "zh-CN": translate("zh-CN", option.description),
                "zh-TW": translate("zh-TW", option.description),
              },
            });
          }
        }

        return {
          name,
          name_localizations: {
            "bg": translate("bg", command.name),
            "cs": translate("cs", command.name),
            "da": translate("da", command.name),
            "de": translate("de", command.name),
            "el": translate("el", command.name),
            "en-GB": translate("en-GB", command.name),
            "en-US": translate("en-US", command.name),
            "es-ES": translate("es-ES", command.name),
            "fi": translate("fi", command.name),
            "fr": translate("fr", command.name),
            "hi": translate("hi", command.name),
            "hr": translate("hr", command.name),
            "hu": translate("hu", command.name),
            "it": translate("it", command.name),
            "ja": translate("ja", command.name),
            "ko": translate("ko", command.name),
            "lt": translate("lt", command.name),
            "nl": translate("nl", command.name),
            "no": translate("no", command.name),
            "pl": translate("pl", command.name),
            "pt-BR": translate("pt-BR", command.name),
            "ro": translate("ro", command.name),
            "ru": translate("ru", command.name),
            "sv-SE": translate("sv-SE", command.name),
            "th": translate("th", command.name),
            "tr": translate("tr", command.name),
            "uk": translate("uk", command.name),
            "vi": translate("vi", command.name),
            "zh-CN": translate("zh-CN", command.name),
            "zh-TW": translate("zh-TW", command.name),
          } as Record<Locale, string>,
          description: command.description,
          description_localizations: {
            "bg": translate("bg", command.description),
            "cs": translate("cs", command.description),
            "da": translate("da", command.description),
            "de": translate("de", command.description),
            "el": translate("el", command.description),
            "en-GB": translate("en-GB", command.description),
            "en-US": translate("en-US", command.description),
            "es-ES": translate("es-ES", command.description),
            "fi": translate("fi", command.description),
            "fr": translate("fr", command.description),
            "hi": translate("hi", command.description),
            "hr": translate("hr", command.description),
            "hu": translate("hu", command.description),
            "it": translate("it", command.description),
            "ja": translate("ja", command.description),
            "ko": translate("ko", command.description),
            "lt": translate("lt", command.description),
            "nl": translate("nl", command.description),
            "no": translate("no", command.description),
            "pl": translate("pl", command.description),
            "pt-BR": translate("pt-BR", command.description),
            "ro": translate("ro", command.description),
            "ru": translate("ru", command.description),
            "sv-SE": translate("sv-SE", command.description),
            "th": translate("th", command.description),
            "tr": translate("tr", command.description),
            "uk": translate("uk", command.description),
            "vi": translate("vi", command.description),
            "zh-CN": translate("zh-CN", command.description),
            "zh-TW": translate("zh-TW", command.description),
          } as Record<Locale, string>,
          default_member_permissions: command.userServerPermissions,
          options: transformedOptions,
        } as types.RESTPostAPIApplicationCommandsJSONBody;
      },
    ),
  );

  if (!DEV_GUILD_ID) {
    return Object.entries(commands).filter(([_name, command]) => !command.dev)
      .length;
  }

  await bot.rest.runMethod<types.RESTPostAPIApplicationCommandsJSONBody[]>(
    bot.rest,
    "put",
    bot.constants.endpoints.COMMANDS_GUILD(bot.applicationId, DEV_GUILD_ID),
    Object.entries(commands).filter(([_name, command]) => command.dev).map(
      ([_name, command]) => {
        if (command.raw) return command.raw;

        const transformedOptions: IRESTSlashCommandOption[] | null = [];
        if (command.options) {
          for (const option of command.options) {
            transformedOptions.push({
              ...option,
              name: translate("en-GB", option.name),
              description: translate("en-GB", option.description),
              name_localizations: {
                "bg": translate("bg", option.name),
                "cs": translate("cs", option.name),
                "da": translate("da", option.name),
                "de": translate("de", option.name),
                "el": translate("el", option.name),
                "en-GB": translate("en-GB", option.name),
                "en-US": translate("en-US", option.name),
                "es-ES": translate("es-ES", option.name),
                "fi": translate("fi", option.name),
                "fr": translate("fr", option.name),
                "hi": translate("hi", option.name),
                "hr": translate("hr", option.name),
                "hu": translate("hu", option.name),
                "it": translate("it", option.name),
                "ja": translate("ja", option.name),
                "ko": translate("ko", option.name),
                "lt": translate("lt", option.name),
                "nl": translate("nl", option.name),
                "no": translate("no", option.name),
                "pl": translate("pl", option.name),
                "pt-BR": translate("pt-BR", option.name),
                "ro": translate("ro", option.name),
                "ru": translate("ru", option.name),
                "sv-SE": translate("sv-SE", option.name),
                "th": translate("th", option.name),
                "tr": translate("tr", option.name),
                "uk": translate("uk", option.name),
                "vi": translate("vi", option.name),
                "zh-CN": translate("zh-CN", option.name),
                "zh-TW": translate("zh-TW", option.name),
              },
              description_localizations: {
                "bg": translate("bg", option.description),
                "cs": translate("cs", option.description),
                "da": translate("da", option.description),
                "de": translate("de", option.description),
                "el": translate("el", option.description),
                "en-GB": translate("en-GB", option.description),
                "en-US": translate("en-US", option.description),
                "es-ES": translate("es-ES", option.description),
                "fi": translate("fi", option.description),
                "fr": translate("fr", option.description),
                "hi": translate("hi", option.description),
                "hr": translate("hr", option.description),
                "hu": translate("hu", option.description),
                "it": translate("it", option.description),
                "ja": translate("ja", option.description),
                "ko": translate("ko", option.description),
                "lt": translate("lt", option.description),
                "nl": translate("nl", option.description),
                "no": translate("no", option.description),
                "pl": translate("pl", option.description),
                "pt-BR": translate("pt-BR", option.description),
                "ro": translate("ro", option.description),
                "ru": translate("ru", option.description),
                "sv-SE": translate("sv-SE", option.description),
                "th": translate("th", option.description),
                "tr": translate("tr", option.description),
                "uk": translate("uk", option.description),
                "vi": translate("vi", option.description),
                "zh-CN": translate("zh-CN", option.description),
                "zh-TW": translate("zh-TW", option.description),
              },
            });
          }
        }

        return {
          name: translate("en-GB", command.name),
          name_localizations: {
            "bg": translate("bg", command.name),
            "cs": translate("cs", command.name),
            "da": translate("da", command.name),
            "de": translate("de", command.name),
            "el": translate("el", command.name),
            "en-GB": translate("en-GB", command.name),
            "en-US": translate("en-US", command.name),
            "es-ES": translate("es-ES", command.name),
            "fi": translate("fi", command.name),
            "fr": translate("fr", command.name),
            "hi": translate("hi", command.name),
            "hr": translate("hr", command.name),
            "hu": translate("hu", command.name),
            "it": translate("it", command.name),
            "ja": translate("ja", command.name),
            "ko": translate("ko", command.name),
            "lt": translate("lt", command.name),
            "nl": translate("nl", command.name),
            "no": translate("no", command.name),
            "pl": translate("pl", command.name),
            "pt-BR": translate("pt-BR", command.name),
            "ro": translate("ro", command.name),
            "ru": translate("ru", command.name),
            "sv-SE": translate("sv-SE", command.name),
            "th": translate("th", command.name),
            "tr": translate("tr", command.name),
            "uk": translate("uk", command.name),
            "vi": translate("vi", command.name),
            "zh-CN": translate("zh-CN", command.name),
            "zh-TW": translate("zh-TW", command.name),
          } as Record<Locale, string>,
          description: translate("en-GB", command.description),
          description_localizations: {
            "bg": translate("bg", command.description),
            "cs": translate("cs", command.description),
            "da": translate("da", command.description),
            "de": translate("de", command.description),
            "el": translate("el", command.description),
            "en-GB": translate("en-GB", command.description),
            "en-US": translate("en-US", command.description),
            "es-ES": translate("es-ES", command.description),
            "fi": translate("fi", command.description),
            "fr": translate("fr", command.description),
            "hi": translate("hi", command.description),
            "hr": translate("hr", command.description),
            "hu": translate("hu", command.description),
            "it": translate("it", command.description),
            "ja": translate("ja", command.description),
            "ko": translate("ko", command.description),
            "lt": translate("lt", command.description),
            "nl": translate("nl", command.description),
            "no": translate("no", command.description),
            "pl": translate("pl", command.description),
            "pt-BR": translate("pt-BR", command.description),
            "ro": translate("ro", command.description),
            "ru": translate("ru", command.description),
            "sv-SE": translate("sv-SE", command.description),
            "th": translate("th", command.description),
            "tr": translate("tr", command.description),
            "uk": translate("uk", command.description),
            "vi": translate("vi", command.description),
            "zh-CN": translate("zh-CN", command.description),
            "zh-TW": translate("zh-TW", command.description),
          } as Record<Locale, string>,
          default_member_permissions: command.userServerPermissions,
          options: transformedOptions,
        } as types.RESTPostAPIApplicationCommandsJSONBody;
      },
    ),
  );

  return Object.entries(commands).length;
}
