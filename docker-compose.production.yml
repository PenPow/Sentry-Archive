version: "3.9"
services:    
  sentry:
    container_name: bot
    image: ghcr.io/penpow/sentry:latest
    tty: true
    restart: always
    ports:
      - 8000:8080
    links:
      - redis:redis
      - rest:rest
      - postgres:postgres
      - phishertools:phishertools
    depends_on:
      redis:
        condition: service_healthy
      rest:
        condition: service_healthy
      postgres:
        condition: service_healthy
      phishertools:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "nc -vz 127.0.0.1 8080 || exit 1"]
      interval: 10s
      timeout: 5s
    volumes:
      - ./config.toml:/app/config.toml:ro

  ws-proxy:
    container_name: ws-proxy
    image: ghcr.io/penpow/sentry-ws:latest
    tty: true
    restart: always
    links:
      - redis:redis
    depends_on:
      redis:
        condition: service_healthy
      rest:
        condition: service_healthy
    volumes:
      - ./config.toml:/app/config.toml:ro

  actions:
    container_name: actions
    image: ghcr.io/penpow/sentry-actions:latest
    tty: true
    restart: always
    links:
      - redis:redis
      - phishertools:phishertools
    depends_on:
      redis:
        condition: service_healthy
      rest:
        condition: service_healthy
      phishertools:
        condition: service_healthy
    volumes:
      - ./config.toml:/app/config.toml:ro

  phishertools:
    container_name: phishertools
    image: ghcr.io/penpow/phishertools:latest
    tty: true
    restart: always
    expose:
      - 3001
    links:
      - redis:redis
    healthcheck:
      test: ["CMD-SHELL", "nc -vz 127.0.0.1 3001 || exit 1"]
      interval: 10s
      timeout: 5s
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./config.toml:/app/config.toml:ro

  rest:
    container_name: rest-proxy
    expose:
      - "3000:3000"
    restart: always
    image: ghcr.io/penpow/sentry-rest:latest
    tty: true
    healthcheck:
      test: ["CMD-SHELL", "nc -vz 127.0.0.1 3000 || exit 1"]
      interval: 10s
      timeout: 5s
    volumes:
      - ./config.toml:/app/config.toml:ro

  clamd:
    container_name: clamd
    restart: always
    expose:
      - "3310:3310"
    image: ghcr.io/penpow/clamd:latest
    healthcheck:
      test: ["CMD-SHELL", "nc -vz 127.0.0.1 3310 || exit 1"]
      interval: 10s
      timeout: 5s
    logging:
      driver: none

  clamav:
    container_name: clamav
    restart: always
    image: ghcr.io/penpow/sentry-clamav:latest
    depends_on:
      clamd:
        condition: service_healthy
    links:
      - clamd:clamd
    tty: true
    volumes:
      - ./config.toml:/app/config.toml:ro

  redis:
    image: redis:7.0.5-alpine
    restart: always
    expose:
      - "6379:6379"
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 10s
      timeout: 5s

  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      - POSTGRES_USER=sentry
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    expose:
      - "5432:5432"
    volumes:
      - "postgres:/var/lib/postgresql/data"
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U sentry']
      interval: 10s
      timeout: 5s

volumes:
  postgres:
    driver: local